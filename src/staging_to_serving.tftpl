
  CREATE TEMP table combined_table AS
  select *,
  ROW_NUMBER() OVER (PARTITION BY ct.unique_key ORDER BY source_timestamp desc) as rn,
  from (
  select
  MD5(CONCAT(CAST(sp.order_id AS STRING), CAST(sp.order_date AS STRING), CAST(sp.order_customer_id AS STRING), sp.order_status)) as unique_key,
  sp.order_id as order_id,
  sp.order_date as order_date,
  sp.order_customer_id as order_customer_id,
  sp.order_status as order_status,
  sp.source_timestamp as source_timestamp,
  CURRENT_TIMESTAMP() as start_date,
  TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL 40000 day) as end_date
  from `event-trigger-cloud-storage.orders_stg_dataset.orders_stg_table` sp
  union all
  select
  MD5(CONCAT(CAST(dp.order_id AS STRING), CAST(dp.order_date AS STRING), CAST(dp.order_customer_id AS STRING), dp.order_status)) as unique_key,
  dp.order_id,
  dp.order_date,
  dp.order_customer_id,
  dp.order_status,
  dp.source_timestamp,
  dp.start_date,
  dp.end_date
  from
  `event-trigger-cloud-storage.orders_srv_dataset.orders_latest_srv` dp) ct
  ;

  truncate table `event-trigger-cloud-storage.orders_srv_dataset.orders_latest_srv`;

  insert into `event-trigger-cloud-storage.orders_srv_dataset.orders_latest_srv`(
    select
    unique_key,
    order_id,
    order_date,
    order_customer_id,
    order_status,
    source_timestamp,
    start_date,
    end_date
    from (
    select
      unique_key,
      order_id,
      order_date,
      order_customer_id,
      order_status,
      source_timestamp,
      start_date,
      end_date,
      ROW_NUMBER() OVER( PARTITION BY order_id ORDER BY source_timestamp DESC) as rn
    from
    combined_table
    where rn = 1 )
  where rn = 1
  );

  insert into `event-trigger-cloud-storage.orders_srv_dataset.orders_hst_srv`(
    select
    unique_key,
    order_id,
    order_date,
    order_customer_id,
    order_status,
    source_timestamp,
    start_date,
    CURRENT_TIMESTAMP()
    from (
    select
      unique_key,
      order_id,
      order_date,
      order_customer_id,
      order_status,
      source_timestamp,
      start_date,
      end_date,
      ROW_NUMBER() OVER( PARTITION BY order_id ORDER BY source_timestamp DESC) as rn
    from
    combined_table
    where rn = 1 )
  where rn > 1
  );

  drop table combined_table;